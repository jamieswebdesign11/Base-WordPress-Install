/**
 * Use when you want to fade in an element with pure CSS. An example is a
 * navigation dropdown that fades in. Normally you'd do this:
 *
 * li {
 *   .dropdown {
 *     display: none;
 *   }
 *   &:hover .dropdown {
 *     display: block;
 *   }
 * }
 *
 * ... but if you toggle display like that, you can't do any CSS3
 * opacity fade ins.
 *
 * This mixin allows you to toggle visibility and fade-in at the same time.
 *
 * @include faded-out(0.4s, ease-in-out);
 * @include fade-in();
 * 
 * 
 * Usage:
 *
 * li {
 *   .dropdown {
 *     @include faded-out(0.4s, ease-in-out);
 *   }
 *   &:hover .dropdown {
 *     @include fade-in();
 *   }
 * }
 *
 * Or for the reverse:
 *
 * figure {
 *   .overlay {
 *     @include faded-in(0.4s, ease-in-out);
 *   }
 *   &:hover .overlay {
 *     @include fade-out();
 *   }
 * }
 *
 * You must use both mixins in tandem.
 *
 * @param $duration  length, in seconds, of the opacity transition
 * @param $easing    the easing to use
 * @param delay      the delay, in seconds
 */

@mixin faded-out-search($duration: 0.3s, $easing: linear, $delay: 0s) {
  visibility: hidden;
  opacity: 1;
  transition: opacity $duration $easing $delay, visibility 0s $easing ($duration + $delay);
}

@mixin fade-in-search($delay: 0s) {
  visibility: visible;
  opacity: 1;
  transition-delay: $delay, $delay;
}

@mixin faded-out($duration: 0.3s, $easing: linear, $delay: 0s) {
  visibility: hidden;
  opacity: 0;
  transition: opacity $duration $easing $delay, visibility 0s $easing ($duration + $delay);
}

@mixin faded-out-up($duration: 0.3s, $easing: linear, $delay: 0s) {
  visibility: hidden;
  opacity: 0;
  margin-top: 1.0rem;
  transition: opacity $duration $easing $delay, margin-top $duration $easing $delay, visibility 0s $easing ($duration + $delay);
}

@mixin fade-in-up($delay: 0s) {
  visibility: visible;
  opacity: 1;
  margin-top: 0;
  transition-delay: $delay, $delay, $delay;
}


@mixin faded-out-down($duration: 0.3s, $easing: linear, $delay: 0s) {
  visibility: hidden;
  opacity: 0;
  top: -1.428571428571429rem;
  transition: opacity $duration $easing $delay, top $duration $easing $delay, visibility 0s $easing ($duration + $delay);
}

@mixin fade-in-down($delay: 0s) {
  visibility: visible;
  opacity: 1;
  top: 0;
  transition-delay: $delay, $delay, $delay;
}

@mixin faded-out-left($duration: 0.3s, $easing: linear, $delay: 0s) {
  visibility: hidden;
  opacity: 0;
  left: 1.428571428571429rem;
  transition: opacity $duration $easing $delay, left $duration $easing $delay, visibility 0s $easing ($duration + $delay);
}

@mixin fade-in-left($delay: 0s) {
  visibility: visible;
  opacity: 1;
  left: 0;
  transition-delay: $delay, $delay, $delay;
}

@mixin fade-in($delay: 0s) {
  visibility: visible;
  opacity: 1;
  transition-delay: $delay, $delay;
}

@mixin faded-in($duration: 0.3s, $easing: linear, $delay: 0s) {
  visibility: visible;
  opacity: 1;
  transition: opacity $duration $easing $delay, visibility 0s $easing $delay;
}

@mixin fade-out($duration: 0.3s, $delay: 0s) {
  visibility: hidden;
  opacity: 0;
  transition-delay: $delay, $duration + $delay;
}
